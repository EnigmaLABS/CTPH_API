// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using CTPH_CoreData.Models;

#nullable disable

namespace CTPH_CoreData.DataContext
{
    public partial class CTPH_DBContext : DbContext
    {
        public CTPH_DBContext()
        {
        }

        public CTPH_DBContext(DbContextOptions<CTPH_DBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Elementos> Elementos { get; set; }
        public virtual DbSet<Elementos_Listas_Valores> Elementos_Listas_Valores { get; set; }
        public virtual DbSet<Muestras> Muestras { get; set; }
        public virtual DbSet<Muestras_Valores> Muestras_Valores { get; set; }
        public virtual DbSet<Perfil_Elementos> Perfil_Elementos { get; set; }
        public virtual DbSet<Perfiles> Perfiles { get; set; }
        public virtual DbSet<PuntosDeMedida> PuntosDeMedida { get; set; }
        public virtual DbSet<SituacionAmbiente> SituacionAmbiente { get; set; }
        public virtual DbSet<SituacionAmbiente_Elementos> SituacionAmbiente_Elementos { get; set; }
        public virtual DbSet<Tipos_PuntosDeMedida> Tipos_PuntosDeMedida { get; set; }
        public virtual DbSet<Tipos_Valores> Tipos_Valores { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<Elementos>(entity =>
            {
                entity.Property(e => e.idElemento).ValueGeneratedNever();

                entity.Property(e => e.Elemento).IsUnicode(false);

                entity.HasOne(d => d.idTipoValorNavigation)
                    .WithMany(p => p.Elementos)
                    .HasForeignKey(d => d.idTipoValor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Elementos_Tipos_Valores");
            });

            modelBuilder.Entity<Elementos_Listas_Valores>(entity =>
            {
                entity.Property(e => e.NombreListaValor).IsUnicode(false);

                entity.HasOne(d => d.idElementoNavigation)
                    .WithMany(p => p.Elementos_Listas_Valores)
                    .HasForeignKey(d => d.idElemento)
                    .HasConstraintName("FK_Elementos_Listas_Valores_Elementos");
            });

            modelBuilder.Entity<Muestras>(entity =>
            {
                entity.Property(e => e.Observaciones).IsUnicode(false);

                entity.Property(e => e.fhMuestra).HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.idSituacionAmbienteNavigation)
                    .WithMany(p => p.Muestras)
                    .HasForeignKey(d => d.idSituacionAmbiente)
                    .HasConstraintName("FK_Muestras_SituacionAmbiente");
            });

            modelBuilder.Entity<Muestras_Valores>(entity =>
            {
                entity.HasKey(e => new { e.idMuestra, e.idPuntoDeMedida });

                entity.HasOne(d => d.idMuestraNavigation)
                    .WithMany(p => p.Muestras_Valores)
                    .HasForeignKey(d => d.idMuestra)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Muestras_Valores_Muestras");

                entity.HasOne(d => d.idPuntoDeMedidaNavigation)
                    .WithMany(p => p.Muestras_Valores)
                    .HasForeignKey(d => d.idPuntoDeMedida)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Muestras_Valores_PuntosDeMedida");
            });

            modelBuilder.Entity<Perfil_Elementos>(entity =>
            {
                entity.HasKey(e => new { e.idPerfil, e.idElemento });
            });

            modelBuilder.Entity<Perfiles>(entity =>
            {
                entity.Property(e => e.Perfil).IsUnicode(false);
            });

            modelBuilder.Entity<PuntosDeMedida>(entity =>
            {
                entity.Property(e => e.Descripcion).IsUnicode(false);

                entity.Property(e => e.Observaciones).IsUnicode(false);

                entity.HasOne(d => d.idTipoPuntoDeMedidaNavigation)
                    .WithMany(p => p.PuntosDeMedida)
                    .HasForeignKey(d => d.idTipoPuntoDeMedida)
                    .HasConstraintName("FK_PuntosDeMedida_Tipos_PuntosDeMedida");
            });

            modelBuilder.Entity<SituacionAmbiente>(entity =>
            {
                entity.Property(e => e.Observaciones).IsUnicode(false);
            });

            modelBuilder.Entity<SituacionAmbiente_Elementos>(entity =>
            {
                entity.HasOne(d => d.idElementoNavigation)
                    .WithMany(p => p.SituacionAmbiente_Elementos)
                    .HasForeignKey(d => d.idElemento)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SituacionAmbiente_Elementos_Elementos1");

                entity.HasOne(d => d.idListaValorNavigation)
                    .WithMany(p => p.SituacionAmbiente_Elementos)
                    .HasForeignKey(d => d.idListaValor)
                    .HasConstraintName("FK_SituacionAmbiente_Elementos_Elementos_Listas_Valores");

                entity.HasOne(d => d.idSituacionAmbienteNavigation)
                    .WithMany(p => p.SituacionAmbiente_Elementos)
                    .HasForeignKey(d => d.idSituacionAmbiente)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SituacionAmbiente_Elementos_SituacionAmbiente1");
            });

            modelBuilder.Entity<Tipos_Valores>(entity =>
            {
                entity.Property(e => e.TipoValor).IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}